---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 7.0.0
      sourceRef:
        kind: HelmRepository
        name: nextcloud
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    timeout: 15m
    remediation:
      retries: 5
  upgrade:
    timeout: 15m
    remediation:
      retries: 5
  values:
    # Number of replicas to be deployed
    replicaCount: 1

    image:
      repository: nextcloud
      tag: 31.0.7-fpm-alpine
      flavor: fpm-alpine

    ## Allowing use of ingress controllers
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ##
    ingress:
      enabled: true
      className: external
      annotations:
        nginx.ingress.kubernetes.io/affinity: cookie
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-headers: "X-Forwarded-For"
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;
          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
      tls:
        - hosts:
            - ${HOSTNAME}

    nextcloud:
      host: ${HOSTNAME}
      update: 0
      datadir: /var/www/html/data
      mail:
        enabled: true
        smtp:
          secure: ""
          port: 587
          authtype: LOGIN

      ##
      ## Extra environment variables
      extraEnv:
        - name: TZ
          value: "Europe/Amsterdam"
        - name: OVERWRITEPROTOCOL
          value: https
        - name: TRUSTED_PROXIES
          value: "10.42.0.0/16"
        - name: REDIS_HOST
          value: &redisHost nextcloud-redis
        - name: REDIS_HOST_PORT
          value: &redisPort "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: nextcloud_redis_password

      extraInitContainers:
        - name: wait-database
          image: alpine:3.22.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: ${APP}-pguser-${APP}
                  key: host
        - name: wait-redis
          image: alpine:3.22.1
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env:
            - name: REDIS_HOST
              value: *redisHost
            - name: REDIS_HOST_PORT
              value: *redisPort

    nginx:
      enabled: true

    internalDatabase:
      enabled: false

    ##
    ## External database configuration
    ##
    externalDatabase:
      enabled: true

      ## Supported database engines: mysql or postgresql
      type: postgresql

      existingSecret:
        enabled: true
        secretName: ${APP}-pguser-${APP}
        usernameKey: user
        passwordKey: password
        hostKey: host
        databaseKey: dbname

    ##
    ## MariaDB chart configuration
    ##
    mariadb:
      ## Whether to deploy a mariadb server to satisfy the applications database requirements. To use an external database set this to false and configure the externalDatabase parameters
      enabled: false

    redis:
      enabled: false

    ## Cronjob to execute Nextcloud background tasks
    ## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron
    ##
    cronjob:
      enabled: true
      resources:
        requests:
          cpu: 10m
          memory: 53M
        limits:
          memory: 400M

    ## Enable persistence using Persistent Volume Claims
    ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    ##
    persistence:
      # Nextcloud Data (/var/www/html)
      enabled: true
      existingClaim: nextcloud-main
      # storageClass: "freenas-nfs-ssd"
      # accessMode: ReadWriteOnce
      # size: 2Gi

      ## Use an additional pvc for the data directory rather than a subpath of the default PVC
      ## Useful to store data on a different storageClass (e.g. on slower disks)
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
        # storageClass: "freenas-nfs-hdd"
        # accessMode: ReadWriteOnce
        # size: 100Gi

    resources:
      requests:
        cpu: 20m
        memory: 200M
      limits:
        memory: 800M

    startupProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 20
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1

#    lifecycle:
#      postStartCommand:
#        - su
#        - www-data
#        - -s
#        - /bin/sh
#        - -c
#        - >-
#          cd /var/www/html;
#          ./occ upgrade;
#          ./occ db:add-missing-indices;
#          /bin/true

  valuesFrom:
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_admin_user
      targetPath: nextcloud.username
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_admin_password
      targetPath: nextcloud.password
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_email_from
      targetPath: nextcloud.mail.fromAddress
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_email_domain
      targetPath: nextcloud.mail.domain
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_email_smtp_host
      targetPath: nextcloud.mail.smtp.host
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_email_smtp_name
      targetPath: nextcloud.mail.smtp.name
    - kind: Secret
      name: nextcloud-secret
      valuesKey: nextcloud_email_smtp_password
      targetPath: nextcloud.mail.smtp.password
