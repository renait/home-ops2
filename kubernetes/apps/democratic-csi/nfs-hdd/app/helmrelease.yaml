---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: csi-nfs-hdd
  namespace: democratic-csi
spec:
  interval: 15m
  chart:
    spec:
      chart: democratic-csi
      version: 0.14.6
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    # https://kubernetes-csi.github.io/docs/csi-driver-object.html
    csiDriver:
      # should be globally unique for a given cluster
      name: org.democratic-csi.nfs-hdd

    csiProxy:
      image: docker.io/democraticcsi/csi-grpc-proxy:v0.5.6
      resources:
        requests:
          cpu: 15m
          memory: 25M
        limits:
          memory: 25M

    controller:
      # democratic-csi controller
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.9.3
        logLevel: debug
        resources:
          requests:
            cpu: 20m
            memory: 250M
          limits:
            memory: 250M

      externalAttacher:
        image: registry.k8s.io/sig-storage/csi-attacher:v4.6.1

      externalProvisioner:
        image: registry.k8s.io/sig-storage/csi-provisioner:v5.0.2
        resources:
          requests:
            cpu: 15m
            memory: 40M
          limits:
            memory: 40M

      externalResizer:
        image: registry.k8s.io/sig-storage/csi-resizer:v1.11.2
        resources:
          requests:
            cpu: 15m
            memory: 50M
          limits:
            memory: 50M

      externalSnapshotter:
        image: registry.k8s.io/sig-storage/csi-snapshotter:v8.0.1
        resources:
          requests:
            cpu: 15m
            memory: 40M
          limits:
            memory: 40M

      externalHealthMonitorController:
        enabled: false
        image: registry.k8s.io/sig-storage/csi-external-health-monitor-controller:v0.12.1

    node:
      # democratic-csi node
      driver:
        image: docker.io/democraticcsi/democratic-csi:v1.9.3
        logLevel: debug
        resources:
          requests:
            cpu: 20m
            memory: 250M
          limits:
            memory: 250M
      driverRegistrar:
        resources:
          requests:
            cpu: 15m
            memory: 30M
          limits:
            memory: 30M

    # add note here about volume expansion requirements
    storageClasses:
      - name: freenas-nfs-hdd
        defaultClass: false
        reclaimPolicy: Delete
        volumeBindingMode: Immediate
        allowVolumeExpansion: true
        parameters:
          # for block-based storage can be ext3, ext4, xfs
          # for nfs should be nfs
          fsType: nfs

          # if true, volumes created from other snapshots will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromSnapshots: "false"

          # if true, volumes created from other volumes will be
          # zfs send/received instead of zfs cloned
          # detachedVolumesFromVolumes: "false"

        mountOptions:
          - nfsvers=4.2
          - nconnect=8
          - hard
          - noatime
          - rsize=131072
          - wsize=131072
        secrets:
          provisioner-secret:
          controller-publish-secret:
          node-stage-secret:
          node-publish-secret:
          controller-expand-secret:

    volumeSnapshotClasses:
      # - name: freenas-nfs-csi
      #   parameters:
      #   # if true, snapshots will be created with zfs send/receive
      #   # detachedSnapshots: "false"
      #   secrets:
      #     snapshotter-secret:
      - name: freenas-nfs-hdd-snap
        deletionPolicy: Delete
        parameters:
          # if true, snapshots will be created with zfs send/receive
          detachedSnapshots: "false"

    driver:
      config:
        driver: freenas-nfs
        instance_id:
        httpConnection:
          protocol: https
          host: truenas.${SECRET_DOMAIN}
          port: 443
          # use either password or api key
          # apiKey:
          # password:
          allowInsecure: false
          apiVersion: 2
        sshConnection:
          host: 192.168.12.41
          port: 22
          username: csi
          # use either password or key
          # password:
          # privateKey: |
          #   -----BEGIN OPENSSH PRIVATE KEY-----
          #   b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2g...
          #   -----END OPENSSH PRIVATE KEY-----
        zfs:
          cli:
            sudoEnabled: true
          datasetParentName: data/p/n/vol
          detachedSnapshotsDatasetParentName: data/p/n/snp
          datasetProperties:
            org.freenas:description: >-
              {{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}
          datasetEnableQuotas: true
          datasetEnableReservation: false
          datasetPermissionsMode: "0777"
          datasetPermissionsUser: 0
          datasetPermissionsGroup: 0
        nfs:
          shareHost: 192.168.12.41
          shareAlldirs: false
          shareAllowedHosts: []
          shareAllowedNetworks: []
          shareMaprootUser: root
          shareMaprootGroup: wheel
          shareMapallUser: ""
          shareMapallGroup: ""
      resources:
        requests:
          cpu: 35m
          memory: 250M
        limits:
          memory: 250M
  valuesFrom:
    - kind: Secret
      name: truenas-secret
      valuesKey: apiKey
      targetPath: driver.config.httpConnection.apiKey
    - kind: Secret
      name: truenas-secret
      valuesKey: privateKey
      targetPath: driver.config.sshConnection.privateKey
