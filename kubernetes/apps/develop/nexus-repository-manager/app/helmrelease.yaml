---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: nexus-repository-manager
spec:
  interval: 30m
  timeout: 5m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    timeout: 5m
    remediation:
      retries: 3
  upgrade:
    timeout: 5m
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: Recreate

        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            runAsNonRoot: true
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: []

        containers:
          main:
            image:
              repository: sonatype/nexus3
              tag: 3.78.1
              pullPolicy: IfNotPresent
            env:
              TZ: "Europe/Amsterdam"
              INSTALL4J_ADD_VM_PARAMS: |-
                -Xms1024m -Xmx1024m
                -XX:MaxDirectMemorySize=2048m
                -Djava.util.prefs.userRoot=/nexus-data/javaprefs
              NEXUS_SECURITY_RANDOMPASSWORD: "true"
            resources:
              requests:
                cpu: 15m
                memory: 1500Mi
              limits:
                memory: 2Gi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /service/rest/v1/status
                    port: &httpPort 8081
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  httpGet:
                    path: /service/rest/v1/status
                    port: *httpPort
                  initialDelaySeconds: 20
                  periodSeconds: 5
                  timeoutSeconds: 1
                  failureThreshold: 60
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: [ "ALL" ] }
              seccompProfile:
                type: RuntimeDefault

    service:
      main:
        controller: main
        ports:
          http:
            port: *httpPort
            targetPort: *httpPort
            protocol: HTTP
      registry:
        enabled: true
        controller: main
        ports:
          registry:
            port: 5000
            targetPort: 5000
            protocol: TCP

    ingress:
      main:
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "15"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
          # This should be the in-cluster DNS name for the authentik outpost service
          # as when the external URL is specified here, nginx will overwrite some crucial headers
#          nginx.ingress.kubernetes.io/auth-url: |-
#            http://ak-outpost-internal-proxy-outpost.security.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          # If you're using domain-level auth, use the authentication URL instead of the application URL
#          nginx.ingress.kubernetes.io/auth-signin: |-
#            /outpost.goauthentik.io/start?rd=$escaped_request_uri
#          nginx.ingress.kubernetes.io/auth-response-headers: |-
#            Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
#          nginx.ingress.kubernetes.io/auth-snippet: |
#            proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: &host1 ${HOSTNAME}
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
          - host: &host2 registry-nexus.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: registry
                  port: registry
        tls:
          - hosts:
              - *host1
              - *host2

    persistence:
      tmp:
        type: emptyDir
      nexus-data:
        existingClaim: "${VOLSYNC_CLAIM}"
      nexus-backup:
        existingClaim: nexus-repository-manager-backup
        advancedMounts:
          main:
            main:
              - path: /nexus-data/backup
      nexus-blobs-default:
        existingClaim: nexus-repository-manager-blobs-default
        advancedMounts:
          main:
            main:
              - path: /nexus-data/blobs/default2
      nexus-blobs-proxied:
        existingClaim: nexus-repository-manager-blobs-proxied
        advancedMounts:
          main:
            main:
              - path: /nexus-data/blobs/proxied2
