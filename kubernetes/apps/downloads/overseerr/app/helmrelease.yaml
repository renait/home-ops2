---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: overseerr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          enableServiceLinks: false
          securityContext:
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch

        containers:
          main:
            image:
              repository: ghcr.io/sct/overseerr
              tag: develop@sha256:ed38454f36f98c4111fc2be1e499c1cf627b411c941664ed8cc608d68ffc001f
            env:
              TZ: "${TIMEZONE}"
              OVERSEERR__INSTANCE_NAME: Overseerr
              OVERSEERR__PORT: &port 5055
              OVERSEERR__LOG_LEVEL: info
              OVERSEERR__ANALYTICS_ENABLED: "False"
              OVERSEERR__APPLICATION_URL: "https://${HOSTNAME}"
              OVERSEERR__AUTHENTICATION_METHOD: External
              OVERSEERR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: overseerr-secret
                    key: api_key
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 500Mi
            securityContext:
              runAsUser: ${APP_UID}
              runAsGroup: ${APP_GID}

    service:
      main:
        controller: main
        ports:
          http:
            port: *port

    ingress:
      main:
        className: "internal"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
          - host: "ombi.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
              - ombi-stg.${SECRET_DOMAIN}

    persistence:
      config:
        existingClaim: ${VOLSYNC_CLAIM}
        advancedMounts:
          main:
            main:
              - path: /app/config
