---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          securityContext:
            runAsUser: ${APP_UID}
            runAsGroup: ${APP_GID}
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups: []

        containers:
          main:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.22.1.9832
            env:
              # Ref: https://github.com/Radarr/Radarr/issues/7030#issuecomment-1039689518
              # Ref: https://github.com/dotnet/runtime/issues/9336
              COMPlus_EnableDiagnostics: "0"
              TZ: "${TIMEZONE}"
              RADARR__INSTANCE_NAME: Radarr
              RADARR__PORT: &port 7878
              RADARR__AUTHENTICATION_METHOD: External
              RADARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              RADARR__APPLICATION_URL: "https://${HOSTNAME}"
              RADARR__LOG_LEVEL: info
              RADARR__API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: radarr-secret
                    key: api_key
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 15m
                memory: 600M
              limits:
                memory: 800M

    service:
      main:
        controller: main
        ports:
          http:
            port: *port

    ingress:
      main:
        className: "internal"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"

    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM}"
      data:
        existingClaim: nas-media
