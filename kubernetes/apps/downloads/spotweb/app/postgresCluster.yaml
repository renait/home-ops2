---
apiVersion: postgres-operator.crunchydata.com/v1beta1
kind: PostgresCluster
metadata:
  name: &name "spotweb"
spec:
  shutdown: false
  postgresVersion: 17

  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        synchronous_commit: "on"
        pg_hba:
          - hostnossl all all 10.42.0.0/16 md5
          - hostssl all all all md5

  instances:
    - name: postgres
      replicas: "${DB_REPLICAS:-2}"
      dataVolumeClaimSpec:
        storageClassName: "${DB_STORAGECLASS:-freenas-iscsi-ssd}"
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "${DB_CAPACITY:-5Gi}"
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              postgres-operator.crunchydata.com/cluster: *name
              postgres-operator.crunchydata.com/data: postgres
  users:
    - name: "${DB_USER}"
      databases:
        - "${DB_NAME}"
      options: "SUPERUSER"
      password:
        type: AlphaNumeric

  backups:
    pgbackrest:
      configuration: &backupConfig
        - secret:
            name: pgo-s3-creds
      global: &backupFlag
        archive-push-queue-max: 4GiB
        repo1-retention-full: "14"
        repo1-retention-full-type: time
        repo1-path: "/${APP}/repo1"
        repo1-s3-uri-style: path
        # NFS
        repo2-bundle: "y"
        repo2-retention-full: "30" # days
        repo2-retention-full-type: "time"
      manual:
        repoName: repo1
        options:
          - --type=full
      metadata:
        labels:
          app.kubernetes.io/name: crunchy-postgres-backup
      repos:
        - name: repo1
          s3:
            bucket: "crunchy-postgres"
            endpoint: "s3.${SECRET_DOMAIN}"
            region: "us-east-1"
          schedules:
            full: "0 1 * * 0" # Sunday at 01:00
            differential: "0 1 * * 1-6" # Mon-Sat at 01:00
        - name: repo2 # NFS
          volume: &nfs
            volumeClaimSpec:
              storageClassName: postgres-nfs
              volumeName: spotweb-postgres-nfs
              accessModes:
                - ReadWriteMany
              resources:
                requests:
                  storage: "1Mi"
          schedules:
            full: "0 1 * * 0" # Sunday at 01:00
            differential: "0 1 * * 1-6" # Mon-Sat at 01:00

#  dataSource:
#    pgbackrest:
#      stanza: "db"
#      configuration: *backupConfig
#      global: *backupFlag
#      repo:
#        name: "repo2"
#        volume: *nfs
