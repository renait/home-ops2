---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app plex
spec:
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      main:
        strategy: Recreate

        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app
          enableServiceLinks: false
          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"
          securityContext:
            fsGroup: ${APP_GID}
            fsGroupChangePolicy: "OnRootMismatch"
            # video,render groups
            supplementalGroups:
              - 44
              - 105

        containers:
          main:
            image:
              repository: plexinc/pms-docker
              tag: plexpass
            env:
              TZ: "${TIMEZONE}"
              PLEX_CLAIM:
                valueFrom:
                  secretKeyRef:
                    name: plex-secret
                    key: PLEX_CLAIM
              CHANGE_CONFIG_DIR_OWNERSHIP: false
              PLEX_ADVERTISE_URL: https://plex.renait.nl:443,http://192.168.14.204:32400
              #ALLOWED_NETWORKS: "10.42.0.0/16"
              PLEX_GID: ${APP_UID}
              PLEX_UID: ${APP_GID}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 5
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 100m
                gpu.intel.com/i915: 1
                memory: 1200Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 2Gi

    service:
      main:
        controller: main
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: "192.168.14.204"
        ports:
          http:
            port: 32400

    ingress:
      main:
        annotations:
          # external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        className: "external"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"

    persistence:
      config:
        existingClaim: "${VOLSYNC_CLAIM}"
        advancedMounts:
          main:
            main:
              - path: /config
      content:
        type: nfs
        server: 192.168.12.41
        path: /mnt/data/media
        advancedMounts:
          main:
            main:
              - path: /data/content
                subPath: content
                readOnly: true
      pictures:
        type: nfs
        server: 192.168.12.41
        path: /mnt/data/media/pictures
        advancedMounts:
          main:
            main:
              - path: /data/pictures
                readOnly: true
      transcode:
        type: emptyDir
        advancedMounts:
          main:
            main:
              - path: /transcode
