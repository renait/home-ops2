---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.10.5
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret,${APP}-pguser-${DB_USER},authentik-redis-secret
      envFrom:
        - secretRef:
            name: authentik-secret
      env:
        - name: AUTHENTIK_POSTGRESQL__HOST
          valueFrom:
            secretKeyRef:
              name: "${APP}-pguser-${DB_USER}"
              key: host
        - name: AUTHENTIK_POSTGRESQL__NAME
          valueFrom:
            secretKeyRef:
              name: "${APP}-pguser-${DB_USER}"
              key: dbname
        - name: AUTHENTIK_POSTGRESQL__USER
          valueFrom:
            secretKeyRef:
              name: "${APP}-pguser-${DB_USER}"
              key: user
        - name: AUTHENTIK_POSTGRESQL__PASSWORD
          valueFrom:
            secretKeyRef:
              name: "${APP}-pguser-${DB_USER}"
              key: password
        - name: AUTHENTIK_REDIS__PASSWORD
          valueFrom:
            secretKeyRef:
              name: authentik-redis-secret
              key: AUTHENTIK_REDIS_PASSWORD

    authentik:
      log_level: info
      email:
        port: 587
        use_tls: true
      error_reporting:
        enabled: false
        send_pii: false
      redis:
        host: "authentik-redis.security.svc.cluster.local"
        password: ""

    server:
      resources:
        requests:
          cpu: 20m
          memory: 500Mi
        limits:
          memory: 800Mi

      metrics:
        enabled: true
        serviceMonitor:
          enabled: true

      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          # external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
        hosts:
          - "${HOSTNAME}"
        tls:
          - hosts:
              - "${HOSTNAME}"

    worker:
      resources:
        requests:
          cpu: 15m
          memory: 300Mi
        limits:
          memory: 1200Mi

    prometheus:
      rules:
        enabled: true

    postgresql:
      enabled: false

    redis:
      enabled: false
