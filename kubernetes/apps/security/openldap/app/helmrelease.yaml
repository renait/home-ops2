---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json

apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openldap
spec:
  interval: 5m
  chart:
    spec:
      chart: openldap-stack-ha
      version: 4.3.3
      sourceRef:
        kind: HelmRepository
        name: helm-openldap
        namespace: flux-system
  maxHistory: 3
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      ldapDomain: "${SECRET_DOMAIN}"
      existingSecret: openldap-secret

    replicaCount: 1

    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        partition: 1

    # Set the container log level
    # Valid log levels: none, error, warning, info (default), debug, trace
    logLevel: info

    # Settings for enabling TLS with custom certificate
    # need a secret with tls.crt, tls.key and ca.crt keys with associated files
    # Ref: https://kubernetes.io/docs/tasks/configmap-secret/managing-secret-using-kubectl/#create-a-secret
    customTLS:
      enabled: false

    # Default configuration for openldap as environment variables. These get injected directly in the container.
    # Use the env variables from https://github.com/osixia/docker-openldap#beginner-guide
    env: {}

    ## Existing configmap with custom ldif
    # Can't be used with customLdifFiles
    # Same format as customLdifFiles
    customLdifCm: openldap-customldif

    # Custom openldap ACLs
    customAcls: |-
      dn: olcDatabase={2}mdb,cn=config
      changetype: modify
      replace: olcAccess
      olcAccess: {0}to attrs=userPassword,shadowLastChange
        by self write
        by dn="cn=admin,${SECRET_LDAP_BASE_DN}" write
        by group.exact="cn=admins,ou=groups,${SECRET_LDAP_BASE_DN}" write
        by anonymous auth
        by * none
      olcAccess: {1}to *
        by dn="cn=admin,${SECRET_LDAP_BASE_DN}" write
        by group.exact="cn=admins,ou=groups,${SECRET_LDAP_BASE_DN}" write
        by dn.children="ou=system,${SECRET_LDAP_BASE_DN}" read
        by self read
        by * none

    replication:
      enabled: false

    ## Persist data to a persistent volume
    persistence:
      enabled: true
      # storageClass: "freenas-iscsi-ssd"
      # accessModes:
      #   - ReadWriteOnce
      # size: 1Gi
      existingClaim: "${VOLSYNC_CLAIM}"

    resources:
      requests:
        cpu: 10m
        memory: 40Mi
      limits:
        memory: 80Mi

    ltb-passwd:
      enabled: false

    phpldapadmin:
      enabled: true
      env:
        PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT: "never"

      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          kubernetes.io/tls-acme: "true"
        path: /
        pathType: Prefix
        hosts:
          - "${HOSTNAME}"
        tls:
          - hosts:
              - "${HOSTNAME}"

      resources:
        requests:
          cpu: 10m
          memory: 80Mi
        limits:
          memory: 100Mi
